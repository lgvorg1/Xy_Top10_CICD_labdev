# This is a basic workflow to help you get started with Actions

name: Scanner on push (CMD)

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push: #branch github.ref
    branches: [ "main" ]
  #pull_request: #branch github.head_ref
  #  branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


env:
  #GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
  XY_USERNAME: ${{ secrets.XY_USERNAME }}
  XY_PASSWORD: ${{ secrets.XY_PASSWORD }}
  #XY_URL: ${{ secrets.XY_URL }}
  XY_URL: 'https://apidev.xygeni.io/deps-doctor-service'
  XY_URL_SCANNER: 'https://get.xygeni.io/latest/scanner/install.sh'
  XY_PRJ_NAME: GH-CICD-${{ github.event.repository.name }}-push-${GITHUB_REF##*/}-CMD

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      - name: Xy Environment
        run: |
          echo XY_URL_SCANNER [${{ env.XY_URL_SCANNER }}]
          echo XY_PRJ_NAME [${{ env.XY_PRJ_NAME }}]
          echo XY_URL_API [${{ vars.XY_URL_API }}]
          

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3 #8e5e7e5ab8b370d6c329ec480221332ada57f0ab
        with:
          # Number of commits to fetch. 0 indicates all history for all branches and tags.
          # Default: 1
          fetch-depth: '0'

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: git log

      # Runs a set of commands using the runners shell
      # curl -L https://get.xygeni.io/latest/scanner/install.sh | /bin/bash -s -- -u ${{ secrets.XY_DEMO_PRUEBAS_USERNAME }} -p ${{ secrets.XY_DEMO_PRUEBAS_PASSWORD }} -s ${{ secrets.XY_DEMO_PRUEBAS_URL }} -d ${GITHUB_WORKSPACE}/scanner
      #sed -i 's/nonTrivialChangeChecker: empty, comments/nonTrivialChangeChecker: /g' ${GITHUB_WORKSPACE}/scanner/conf/codetampering/ccm/workflow_modification.yml
      #sed -i 's/changeValidationChecker: pr_reviewed OR (commit_signed AND author_is_admin)/changeValidationChecker: /g' ${GITHUB_WORKSPACE}/scanner/conf/codetampering/ccm/workflow_modification.yml
          
      - name: Download Xygeni Scanner 
        run: |
          echo Downloading Xygeni Scanner ....
          echo Pruebas 1
          echo Pruebas 2
          echo Pruebas 3
          curl -L ${{ env.XY_URL_SCANNER }} | /bin/bash -s -- -u ${{ env.XY_USERNAME }} -p ${{ env.XY_PASSWORD }} -s ${{ env.XY_URL }} -d ${GITHUB_WORKSPACE}/scanner
          ls -l
          pwd
          cat ${GITHUB_WORKSPACE}/scanner/conf/codetampering/ccm/workflow_modification.yml | grep nonTrivialChangeChecker
          cat ${GITHUB_WORKSPACE}/scanner/conf/codetampering/ccm/workflow_modification.yml | grep changeValidationChecker
          sed -i 's/nonTrivialChangeChecker: empty, comments/nonTrivialChangeChecker: /g' ${GITHUB_WORKSPACE}/scanner/conf/codetampering/ccm/workflow_modification.yml
          sed -i 's/changeValidationChecker: pr_reviewed OR (commit_signed AND author_is_admin)/changeValidationChecker: pr_reviewed/g' ${GITHUB_WORKSPACE}/scanner/conf/codetampering/ccm/workflow_modification.yml
          
          cat ${GITHUB_WORKSPACE}/scanner/conf/misconfigurations/unprotected_branch.yml | grep enforceAdmins
          sed -i 's/enforceAdmins: false/enforceAdmins: true /g' ${GITHUB_WORKSPACE}/scanner/conf/misconfigurations/unprotected_branch.yml
          

          echo "-------"
          cat ${GITHUB_WORKSPACE}/scanner/conf/codetampering/ccm/workflow_modification.yml | grep nonTrivialChangeChecker
          cat ${GITHUB_WORKSPACE}/scanner/conf/codetampering/ccm/workflow_modification.yml | grep changeValidationChecker
          cat ${GITHUB_WORKSPACE}/scanner/conf/misconfigurations/unprotected_branch.yml | grep enforceAdmins





      # Runs a set of commands using the runners shell
      #${GITHUB_WORKSPACE}/scanner/xygeni scan --never-fail -n Xy-${{ github.event.repository.name }}-CMD --dir ${GITHUB_WORKSPACE}/src --all-files
      #${GITHUB_WORKSPACE}/scanner/xygeni inventory  --upload --never-fail -n Xy-${{ github.event.repository.name }}-CMD --dir ${GITHUB_WORKSPACE}/src
      #${GITHUB_WORKSPACE}/scanner/xygeni scan --upload -n GH-${{ github.event.repository.name }}-push-${{ github.ref }}-CMD --dir ${GITHUB_WORKSPACE}/src
      #${GITHUB_WORKSPACE}/scanner/xygeni codetamper --last -u -n GH-${{ github.event.repository.name }}-push-${GITHUB_REF##*/}-CMD --dir ${GITHUB_WORKSPACE} -e **/scanner/** 
      - name: Execution Xygeni Scanner
        run: |
          echo Executing Xygeni scan ....    
          ${GITHUB_WORKSPACE}/scanner/xygeni scan --never-fail -n ${{ env.XY_PRJ_NAME }} --dir ${GITHUB_WORKSPACE} -e **/scanner/**
          echo =======
          echo =======
          ls -al 
        env:
          GITHUB_PAT: ${{ secrets.GH_PAT }}
